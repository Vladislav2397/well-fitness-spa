@function toRem($size) {
    $remSize: $size / 12 + rem;

    @return #{$remSize};
}

@function freezeRem($size) {
    $newSize: $size * 1.2 + px;

    @return #{$newSize};
}

@function percent-width(
    $count,
    $container,
    $gap,
    $column-count,
    $gap-direction
) {
    $column-width: ($container - $gap * ($column-count - 1)) / $column-count;

    $column-width-percent: $column-width / $container * 100%;
    $gap-width-percent: $gap / $container * 100%;

    @if $count == 0 {
        @return $gap-width-percent;
    }

    $result: $column-width-percent * $count + (
        $gap-width-percent * ($count - 1)
    );

    @if $gap-direction == 1 {
        $result: $result + $gap-width-percent;
    } @else if $gap-direction == 2 {
        $result: $result + ($gap-width-percent * 2)
    }

    @return $result;
}

@function d-columns($count, $gap-direction-count: 0) {
    @return percent-width($count, 1410, 30, 12, $gap-direction-count);
}

@function t-columns($count, $gap-direction-count: 0) {
    @return percent-width($count, 940, 20, 12, $gap-direction-count);
}

@function m-columns($count, $gap-direction-count: 0) {
    @return percent-width($count, 300, 20, 4, $gap-direction-count);
}

@function d_columns($count, $is-left-wide: false, $is-right-wide: false) {
    $container: 1410;
    $gap: 30;
    $column-count: 12;

    $column-width: ($container - $gap * ($column-count - 1)) / $column-count;

    $column-width-percent: $column-width / $container * 100%;
    $gap-width-percent: $gap / $container * 100%;

    @if $count == 0 {
        @return $gap-width-percent;
    }

    $result: $column-width-percent * $count + ($gap-width-percent * ($count - 1));

    @if $is-left-wide {
        $result: $result + $gap-width-percent;
    }
    @if $is-right-wide {
        $result: $result + $gap-width-percent;
    }

    @return $result;
}

@function t_columns($count, $is-left-wide: false, $is-right-wide: false) {
    $container: 960;
    $gap: 30;
    $column-count: 12;

    $column-width: ($container - $gap * ($column-count - 1)) / $column-count;

    $column-width-percent: $column-width / $container * 100%;
    $gap-width-percent: $gap / $container * 100%;

    @if $count == 0 {
        @return $gap-width-percent;
    }

    $result: $column-width-percent * $count + ($gap-width-percent * ($count - 1));

    @if $is-left-wide {
        $result: $result + $gap-width-percent;
    }
    @if $is-right-wide {
        $result: $result + $gap-width-percent;
    }

    @return $result;
}

@mixin marginLevel($direction, $color, $sign: plus) {
    @each $spaceLevel, $pixels in $spaces {
        @if $spaceLevel == $color {
            @if $direction == 'both' {
                margin-top: map-get($spaces, $spaceLevel);
                margin-bottom: map-get($spaces, $spaceLevel);
            }

            @else {
                margin-#{$direction}: map-get($spaces, $spaceLevel);
            }
        }
    }
}

@mixin paddingLevel($direction, $color) {
    @each $spaceLevel, $pixels in $spaces {
        @if $spaceLevel == $color {
            @if $direction == 'both' {
                padding-top: map-get($spaces, $spaceLevel);
                padding-bottom: map-get($spaces, $spaceLevel);
            }

            @else {
                padding-#{$direction}: map-get($spaces, $spaceLevel);
            }
        }
    }
}

@mixin positionLevel($direction,$color,$sign: plus) {
    @each $spaceLevel, $pixels in $spaces {
        @if $spaceLevel == $color {
            @if (length(map-get($spaces, $spaceLevel)) == 1) {
                @if ($sign == plus) {
                    #{$direction}: nth(map-get($spaces, $spaceLevel), 1);
                }

                @else if($sign == minus) {
                    #{$direction}: -#{nth(map-get($spaces, $spaceLevel), 1)};
                }
            }

            @else {
                @if (nth(map-get($spaces, $spaceLevel), 1) == nth(map-get($spaces, $spaceLevel), 2)) {
                    @media (max-width: $maxTablet) {
                        @if ($sign == plus) {
                            #{$direction}: nth(map-get($spaces, $spaceLevel), 1);
                        }

                        @else if($sign == minus) {
                            #{$direction}: -#{nth(map-get($spaces, $spaceLevel), 1)};
                        }
                    }

                    @media (min-width: $desktop) {
                        @if ($sign == plus) {
                            #{$direction}: nth(map-get($spaces, $spaceLevel), 3);
                        }

                        @else if($sign == minus) {
                            #{$direction}: -#{nth(map-get($spaces, $spaceLevel), 3)};
                        }
                    }
                }

                @else if(nth(map-get($spaces, $spaceLevel), 2) == nth(map-get($spaces, $spaceLevel), 3)) {
                    @media (max-width: $maxMobile) {
                        @if ($sign == plus) {
                            #{$direction}: nth(map-get($spaces, $spaceLevel), 1);
                        }

                        @else if($sign == minus) {
                            #{$direction}: -#{nth(map-get($spaces, $spaceLevel), 1)};
                        }
                    }

                    @media (min-width: $tablet) and (max-width: $maxTablet) {
                        @if ($sign == plus) {
                            #{$direction}: nth(map-get($spaces, $spaceLevel), 2);
                        }

                        @else if($sign == minus) {
                            #{$direction}: -#{nth(map-get($spaces, $spaceLevel), 2)};
                        }
                    }
                }

                @else {
                    @media (max-width: $maxMobile) {
                        @if ($sign == plus) {
                            #{$direction}: nth(map-get($spaces, $spaceLevel), 1);
                        }

                        @else if($sign == minus) {
                            #{$direction}: -#{nth(map-get($spaces, $spaceLevel), 1)};
                        }
                    }

                    @media (min-width: $tablet) and (max-width: $maxTablet) {
                        @if ($sign == plus) {
                            #{$direction}: nth(map-get($spaces, $spaceLevel), 2);
                        }

                        @else if($sign == minus) {
                            #{$direction}: -#{nth(map-get($spaces, $spaceLevel), 2)};
                        }
                    }

                    @media (min-width: $desktop) {
                        @if ($sign == plus) {
                            #{$direction}: nth(map-get($spaces, $spaceLevel), 3);
                        }

                        @else if($sign == minus) {
                            #{$direction}: -#{nth(map-get($spaces, $spaceLevel), 3)};
                        }
                    }
                }
            }
        }
    }
}

@mixin _getStyle($style) {
    @if $style == medium {
        font-weight: 500;
    }

    @if $style == italic {
        font-style: italic;
    }

    @if $style == underline {
        text-decoration: underline;
    }

    @if $style == mono {
        font-feature-settings: 'tnum' on, 'lnum' on;
    }
}

@mixin fontSize($name, $style: regular) {
    @each $tagName, $tagValue in $tags {
        @if $tagName == $name {

            $selectedTag: map-get($tags, $tagName);
            $fontSize: nth($selectedTag, 1);
            $lineHeight: nth($selectedTag, 2);

            font-size: $fontSize;
            line-height: $lineHeight;

            @if $style != regular {
                @if type-of($style) == 'string' {
                    @include _getStyle($style);
                }

                @if type-of($style) == 'list' {
                    @each $s in $style {
                        @include _getStyle($s);
                    }
                }
            }
        }
    }
}
